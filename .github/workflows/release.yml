name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Existing tag to release (e.g. v2025.01.01)'
        required: true
      prerelease:
        description: 'Mark the GitHub release as a pre-release'
        default: false
        type: boolean

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_REPOSITORY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine release tag
        id: vars
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${GITHUB_REF##*/}"
          fi
          if [ -z "$TAG" ]; then
            echo "Unable to determine release tag" >&2
            exit 1
          fi
          echo "tag=$TAG" >> "$GITHUB_OUTPUT"

      - name: Checkout requested tag
        if: github.event_name == 'workflow_dispatch'
        run: git checkout "${{ steps.vars.outputs.tag }}"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: ui/package-lock.json

      - name: Install UI dependencies
        working-directory: ui
        run: npm ci

      - name: Build UI for production
        working-directory: ui
        run: npm run build -- --configuration production

      - name: Package UI bundle
        run: |
          cd ui/dist
          zip -r "../../metube-ui-${{ steps.vars.outputs.tag }}.zip" metube

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@v1

      - name: Synchronize backend dependencies
        run: uv sync --frozen --no-dev

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: env.DOCKERHUB_REPO != ''
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Prepare Docker tags
        id: dockertags
        run: |
          tag='${{ steps.vars.outputs.tag }}'
          repo_lower="$(echo \"${GITHUB_REPOSITORY}\" | tr '[:upper:]' '[:lower:]')"
          {
            echo "list<<EOF"
            if [ -n "${DOCKERHUB_REPO}" ]; then
              echo "${DOCKERHUB_REPO}:${tag}"
              echo "${DOCKERHUB_REPO}:latest"
            fi
            echo "ghcr.io/${repo_lower}:${tag}"
            echo "ghcr.io/${repo_lower}:latest"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.dockertags.outputs.list }}
          build-args: |
            VERSION=${{ steps.vars.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: MetubeEX ${{ steps.vars.outputs.tag }}
          files: metube-ui-${{ steps.vars.outputs.tag }}.zip
          prerelease: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.prerelease == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
